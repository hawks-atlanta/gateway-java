version: "3.1"

networks:
  net:

services:
  worker:
    image: ghcr.io/hawks-atlanta/worker-java:latest
    container_name: worker
    restart: on-failure
    depends_on:
      - metadata
    ports:
      - "127.0.0.1:1099:1099" # RMI
    environment:
      METADATA_BASEURL: "http://metadata:8080/api/v1"
      VOLUME_BASE_PATH: "/var/capy/store"
      AVAILABLE_VOLUMES: "1,2,3"
    networks:
      - net

  metadata:
    image: ghcr.io/hawks-atlanta/metadata-scala:latest
    container_name: metadata
    restart: on-failure
    depends_on:
      - postgres-db
    ports:
      - "127.0.0.1:8082:8080"
    environment:
      DATABASE_HOST: postgres-db
      DATABASE_PORT: 5432
      DATABASE_NAME: metadatadb
      DATABASE_USER: username
      DATABASE_PASSWORD: password
    networks:
      - net

  authentication:
    image: ghcr.io/hawks-atlanta/authentication-go:latest
    container_name: authentication
    restart: on-failure
    depends_on:
      - postgres-db
    ports:
      - "127.0.0.1:8081:8080"
    environment:
      DATABASE_ENGINE: postgres
      DATABASE_DSN: "host=postgres-db user=username password=password dbname=authdb port=5432 sslmode=disable"
    networks:
      - net

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: on-failure
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_MULTIPLE_DATABASES: authdb,metadatadb
      POSTGRES_PASSWORD: password
      POSTGRES_USER: username
    volumes:
      - ./.docker-psql-mult-db:/docker-entrypoint-initdb.d/init.sh
      #- ../docker-mounts/capydb:/var/lib/postgresql/data
    networks:
      - net

  postgres-admin:
    image: adminer
    ports:
      - "127.0.0.1:5050:8080"
    environment:
      ADMINER_DESIGN: hever
      ADMINER_DEFAULT_SERVER: postgres-db
      ADMINER_DEFAULT_USER: username
      ADMINER_DEFAULT_PASSWORD: password
      ADMINER_DEFAULT_TYPE: postgresql
      ADMINER_DEFAULT_PORT: 5432
      ADMINER_DEFAULT_DB: metadatadb
    networks:
      - net
    attach: false
